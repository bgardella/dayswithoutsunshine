<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-2.5.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.0.xsd">
       
    <context:property-placeholder location="/WEB-INF/environment.properties" />    

    <security:http auto-config="false" entry-point-ref="customAuthEntryPoint">
        <!-- got to let folks hit the custom login page without being logged in.  heh. -->
        <security:intercept-url pattern="/login.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/js/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/docs/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/image/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/signup/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/auth-fail" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/authenticate" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/validate/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
                
        <!-- make everything else public for now -->
        <security:intercept-url pattern="/**" access="ROLE_USER" />

      
      <!-- custom filter for correct rememberme behavoir -->
      <security:custom-filter ref="rememberMeFilter" position="REMEMBER_ME_FILTER"/>
      <security:custom-filter ref="myUsernamePasswordAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
      <security:custom-filter ref="logoutFilter" position="LOGOUT_FILTER"/>

    </security:http>
    
    <bean id="customAuthEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <property name="loginFormUrl" value="/login" />
        <property name="forceHttps" value="false" />
    </bean>
    
    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg ref="myLogoutSuccessHandler"/>
        <constructor-arg>
            <list>
                <ref bean="rememberMeServices"/>
            </list>
        </constructor-arg>
        <property name="FilterProcessesUrl" value="/logout"/>
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="myAuthenticationProvider"/>                  
    </security:authentication-manager>
      
    <bean id="metaDataSource" class="com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource">
        <property name="user" value="${gardella.jdbc.user}"/>
        <property name="password" value="${gardella.jdbc.pass}"/>
        <property name="databaseName" value="${gardella.jdbc.dbname}"/>
        <property name="serverName" value="${gardella.jdbc.servername}"/>
    </bean>
<!-- 
    <bean id="MemcacheDAO" class="org.gardella.common.memcached.MemcacheDAO">
        <property name="addresses" value="${memcache.host}:${memcache.port}"/>
    </bean>      
-->
    <bean name="userDAO" class="org.gardella.security.dao.UserDAO">
        <property name="dataSource" ref="metaDataSource"/>
    </bean>  
    
    <bean name="loginService" class="org.gardella.security.service.LoginService">
        <property name="userDAO" ref="userDAO"/>
    </bean>   

    <bean name="myAuthenticationProvider" class="org.gardella.security.MyAuthenticationProvider">
        <property name="loginService" ref="loginService"/>
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean name="rememberMeUserDetailsService" class="org.gardella.security.service.RememberMeUserDetailsService">
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean name="myLogoutSuccessHandler" class="org.gardella.security.MyLogoutSuccessHandler">
        <property name="defaultTargetUrl" value="/login"/>
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
      <property name="rememberMeServices" ref="rememberMeServices"/>
      <property name="authenticationManager" ref="authenticationManager" />
    </bean>
    <bean id="rememberMeServices" class="org.gardella.security.service.RememberMeServices">
      <property name="userDetailsService" ref="rememberMeUserDetailsService"/>
      <property name="key" value="gardella"/>
    </bean>
    <bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
      <property name="key" value="gardella"/>
    </bean>

    <bean name="myUsernamePasswordAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <property name="rememberMeServices" ref="rememberMeServices"/>
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler">
            <bean class="org.gardella.security.MySavedRequestAwareAuthenticationSuccessHandler">
                <property name="defaultTargetUrl" value="/home" />
                <property name="alwaysUseDefaultTargetUrl" value="false"/>
            </bean>
        </property>
        <property name="authenticationFailureHandler">
            <bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <property name="defaultFailureUrl" value="/auth-fail"/>
            </bean>
        </property>
    </bean>

</beans>       